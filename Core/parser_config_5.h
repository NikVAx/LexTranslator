#pragma once

#include "parser_config.h"

#include "term_type.h"
#include "term_types.h"

#include <vector>

const std::vector<int> INPUT_ALPHABET_MAP =
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	18,	19,	0,	0,	19,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	20,	0,	0,	0,	0,	0,	0,	0,	0,	0,	26,	0,	0,	0,	0,	27,	17,	17,	17,	17,	17,	17,	17,	17,	17,	17,	22,	21,	24,	23,	25,	0,	0,	16,	16,	13,	14,	16,	16,	16,	16,	9,	16,	16,	12,	15,	16,	16,	16,	16,	16,	16,	16,	16,	10,	16,	11,	16,	16,	0,	0,	0,	0,	0,	0,	16,	16,	16,	16,	3,	2,	16,	7,	1,	16,	16,	4,	16,	8,	16,	16,	16,	16,	5,	6,	16,	16,	16,	16,	16,	16,	0,	0,	0,	0,	0
};

static const int INITIAL_STATE = 1;

const std::vector<std::vector<int>> STATES_MATRIX = {
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
0,	21,	2,	23,	2,	2,	27,	2,	2,	3,	4,	5,	9,	13,	14,	18,	2,	0,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	6,	7,	7,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	5,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	6,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	7,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	11,	12,	12,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	10,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	11,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	12,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	8,	9,	16,	17,	17,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	8,	9,	15,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	8,	9,	16,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	8,	9,	17,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	8,	9,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	8,	9,	13,	14,	19,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	8,	9,	13,	14,	20,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	3,	4,	8,	9,	13,	14,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	22,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	24,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	25,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	26,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	28,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	29,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	30,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	2,	1,	1,	1,	31,	32,	34,	35,	36,	0,	1
},
{
0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	31,	1,	1,	1,	1,	1,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	33,	0,	0,	0,	0
},
{
0,	21,	2,	23,	2,	2,	27,	2,	2,	3,	4,	5,	9,	13,	14,	18,	2,	0,	33,	33,	33,	0,	0,	0,	0,	0,	0,	0
},
{
0,	21,	2,	23,	2,	2,	27,	2,	2,	3,	4,	5,	9,	13,	14,	18,	2,	0,	34,	34,	34,	0,	0,	0,	0,	0,	0,	0
},
{
0,	21,	2,	23,	2,	2,	27,	2,	2,	3,	4,	5,	9,	13,	14,	18,	2,	0,	35,	35,	35,	0,	0,	0,	0,	0,	0,	0
},
{
0,	21,	2,	23,	2,	2,	27,	2,	2,	3,	4,	5,	9,	13,	14,	18,	2,	0,	36,	36,	36,	0,	0,	0,	0,	0,	0,	0
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	39,	38
},
{
38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	38,	41,	38,	38,	38,	38,	38,	38,	38,	38
},
{
39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39
},
{
39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	39,	41
},
{
0,	21,	2,	23,	2,	2,	27,	2,	2,	3,	4,	5,	9,	13,	14,	18,	2,	0,	1,	1,	1,	1,	32,	34,	35,	36,	0,	1
}
};

const std::vector<std::vector<int>> BOUNDS_MATRIX = {
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
},
{
0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	0,	0,	0,	0,	0,	0,	0
},
{
0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1,	1,	1,	0,	0,	0,	0,	0,	0,	0
},
{
0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1,	1,	1,	0,	0,	0,	0,	0,	0,	0
},
{
0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1,	1,	1,	0,	0,	0,	0,	0,	0,	0
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1
}
};

const std::vector<std::vector<int>> ERRORS_MATRIX = {
{
4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	4,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
5,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	4,	0,	0,	0,	5,	5,	0,	5,	5,	5,	5
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	5,	5,	5,	5,	5,	5,	5
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	4,	0,	0,	0,	5,	5,	5,	5,	5,	5,	5
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	4,	0,	0,	0,	5,	5,	5,	5,	5,	5,	5
},
{
5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	4,	0,	0,	0,	5,	5,	5,	5,	5,	5,	5
},
{
3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	3,	0,	0
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0
},
{
4,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	4,	0,	0,	0,	0,	0,	0,	0,	0,	5,	0
}
};

const std::vector<TermType> TOKEN_TYPE_MAP =
{
    TermTypes::UNDEFINED,
    TermTypes::UNDEFINED,
    TermTypes::IDENTIFIER,

    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,

    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,

    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,

    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,

    TermTypes::IDENTIFIER,
    TermTypes::IF,

    TermTypes::IDENTIFIER,
    TermTypes::IDENTIFIER,
    TermTypes::IDENTIFIER,
    TermTypes::ELSE,

    TermTypes::IDENTIFIER,
    TermTypes::IDENTIFIER,
    TermTypes::IDENTIFIER,
    TermTypes::THEN,

    TermTypes::SEMICOLON,
    TermTypes::IDENTIFIER,
    TermTypes::ASSIGNMENT,

    TermTypes::EQUAL,
    TermTypes::LESS,
    TermTypes::GREATER,

    TermTypes::UNDEFINED,
    TermTypes::UNDEFINED,
    TermTypes::UNDEFINED,
    TermTypes::UNDEFINED,
    TermTypes::COMMENT

};

ParserConfig SmConfigVariant5(
    INITIAL_STATE,
    INPUT_ALPHABET_MAP,
    STATES_MATRIX,
    BOUNDS_MATRIX,
    ERRORS_MATRIX,
    TOKEN_TYPE_MAP
);