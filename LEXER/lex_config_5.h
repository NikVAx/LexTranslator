#pragma once

#include <vector>

#include "TermTypes.h"

const std::vector<std::vector<int>> STATES_MATRIX = {
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 6, 7, 7, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 5, 2, 2, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 6, 2, 2, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 7, 2, 2, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 11, 12, 12, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 10, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 11, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 12, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 2, 2, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 16, 17, 17, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 15, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 16, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 17, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 2, 2, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 19, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 20, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 2, 2, 2, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 0, 22, 27, 28, 0, 0, 0, 0, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 0, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 30, 29, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 32, 29, 29 },
    { 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 30, 30, 30, 30, 30 },
    { 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 32, 30, 30, 30, 30 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
    { 0, 3, 4, 8, 9, 13, 14, 18, 2, 0, 21, 0, 27, 28, 23, 24, 25, 26, 33, 1, 1, 1 },
};

const std::vector<std::vector<int>> BOUNDS_MATRIX = {
    { 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ,
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ,
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,
    { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } ,

};

const std::vector<std::vector<int>> ERRORS_MATRIX = {
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
};

const std::vector<TermTypes> TOKEN_TYPE_MAP =
{
    TermTypes::UNDEFINED,
    TermTypes::UNDEFINED,
    TermTypes::IDENTIFIER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::NUMBER,
    TermTypes::ASSIGNMENT,
    TermTypes::PLUS,
    TermTypes::MINUS,
    TermTypes::MULTIPLY,
    TermTypes::DIVIDE,
    TermTypes::OPEN_BRACKET,
    TermTypes::CLOSE_BRACKET,
    TermTypes::UNDEFINED,
    TermTypes::UNDEFINED,
    TermTypes::UNDEFINED,
    TermTypes::COMMENT,
    TermTypes::SEMICOLON,
};
